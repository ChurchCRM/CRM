<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);
require '../Include/Config.php';

// This file is generated by Composer
require_once dirname(__FILE__) . '/../vendor/autoload.php';


use BotMan\BotMan\BotMan;
use BotMan\BotMan\BotManFactory;
use BotMan\BotMan\Drivers\DriverManager;
use BotMan\BotMan\Interfaces\Middleware\Received;
use Monolog\Handler\StreamHandler;
use ChurchCRM\Utils\LoggerUtils;
use ChurchCRM\Event;
use ChurchCRM\EventQuery;

$logger = LoggerUtils::getChatBotLogger();
$logger->info("Request on BotMan Listener");

try {
    require __DIR__."/ReceivedLoggerMiddleware.php";
    require __DIR__."/SendingLoggerMiddleware.php";
    require __DIR__."/ReceivedIntentClassificationMiddleware.php";
    DriverManager::loadDriver(\BotMan\Drivers\Slack\SlackDriver::class);

    // Create BotMan instance
    $config = [
        'slack' => [
            'token' => '<TOKEN>'
        ]
    ];
    $botman = BotManFactory::create($config);
   

    // Give the bot something to listen for.
    $botman->hears('hello', function (BotMan $bot) {
        // add records to the log
        $bot->replyInThread('Hello yourself.', []);
    });


    $botman->fallback(function ($bot) {
        $bot->replyInThread('Sorry, I did not understand these commands. Here is a list of commands I understand: ...', []);
    });

    $middleware = new ReceivedLoggerMiddleware();
    $botman->middleware->received($middleware);

    $middleware = new ReceivedIntentClassificationMiddleware();
    $botman->middleware->received($middleware);
    foreach ($middleware->getIntents() as $intent) {
        LoggerUtils::getChatBotLogger()->info("Adding hears middleware for: " . $intent->getLabel());
        $botman->hears('', function (BotMan $bot) {
        })->middleware($intent);
    }

    $smiddleware = new SendingLoggerMiddleware();
    $botman->middleware->sending($smiddleware);


    // Start listening
    $botman->listen();
} catch (Exception $e) {
    $logger->info("error handling request: ".$e);
}
